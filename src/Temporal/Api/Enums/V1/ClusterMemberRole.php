<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/enums/v1/cluster.proto

namespace Temporal\Api\Enums\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>temporal.api.enums.v1.ClusterMemberRole</code>
 */
class ClusterMemberRole
{
    /**
     * Generated from protobuf enum <code>CLUSTER_MEMBER_ROLE_UNSPECIFIED = 0;</code>
     */
    const CLUSTER_MEMBER_ROLE_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>CLUSTER_MEMBER_ROLE_FRONTEND = 1;</code>
     */
    const CLUSTER_MEMBER_ROLE_FRONTEND = 1;
    /**
     * Generated from protobuf enum <code>CLUSTER_MEMBER_ROLE_HISTORY = 2;</code>
     */
    const CLUSTER_MEMBER_ROLE_HISTORY = 2;
    /**
     * Generated from protobuf enum <code>CLUSTER_MEMBER_ROLE_MATCHING = 3;</code>
     */
    const CLUSTER_MEMBER_ROLE_MATCHING = 3;
    /**
     * Generated from protobuf enum <code>CLUSTER_MEMBER_ROLE_WORKER = 4;</code>
     */
    const CLUSTER_MEMBER_ROLE_WORKER = 4;

    private static $valueToName = [
        self::CLUSTER_MEMBER_ROLE_UNSPECIFIED => 'CLUSTER_MEMBER_ROLE_UNSPECIFIED',
        self::CLUSTER_MEMBER_ROLE_FRONTEND => 'CLUSTER_MEMBER_ROLE_FRONTEND',
        self::CLUSTER_MEMBER_ROLE_HISTORY => 'CLUSTER_MEMBER_ROLE_HISTORY',
        self::CLUSTER_MEMBER_ROLE_MATCHING => 'CLUSTER_MEMBER_ROLE_MATCHING',
        self::CLUSTER_MEMBER_ROLE_WORKER => 'CLUSTER_MEMBER_ROLE_WORKER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

